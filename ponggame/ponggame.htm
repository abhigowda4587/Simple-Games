<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pong Game</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            overflow: hidden;
            background-color: #000;
        }
        canvas {
            display: block;
            margin: auto;
            background-color: #000;
        }
    </style>
</head>
<body>
    <canvas id="pongCanvas" width="800" height="400"></canvas>

    <script>
        const canvas = document.getElementById('pongCanvas');
        const ctx = canvas.getContext('2d');
        
        // Paddle dimensions
        const paddleWidth = 10;
        const paddleHeight = 100;

        // Ball dimensions
        const ballSize = 10;

        // Paddle positions
        let leftPaddleY = (canvas.height - paddleHeight) / 2;
        let rightPaddleY = (canvas.height - paddleHeight) / 2;

        // Ball position and speed
        let ballX = canvas.width / 2;
        let ballY = canvas.height / 2;
        let ballSpeedX = 5;
        let ballSpeedY = 5;

        // Key states
        let upPressed = false;
        let downPressed = false;

        // Update function
        function update() {
            if (upPressed && leftPaddleY > 0) {
                leftPaddleY -= 7;
            }
            if (downPressed && leftPaddleY + paddleHeight < canvas.height) {
                leftPaddleY += 7;
            }

            // Ball movement
            ballX += ballSpeedX;
            ballY += ballSpeedY;

            // Collision with top and bottom walls
            if (ballY + ballSize >= canvas.height || ballY <= 0) {
                ballSpeedY *= -1;
            }

            // Collision with paddles
            if (ballX <= paddleWidth && ballY + ballSize >= leftPaddleY && ballY <= leftPaddleY + paddleHeight) {
                ballSpeedX *= -1;
            }
            if (ballX + ballSize >= canvas.width - paddleWidth && ballY + ballSize >= rightPaddleY && ballY <= rightPaddleY + paddleHeight) {
                ballSpeedX *= -1;
            }

            // Check for scoring
            if (ballX + ballSize >= canvas.width) {
                alert('Left player scores!');
                resetBall();
            }
            if (ballX <= 0) {
                alert('Right player scores!');
                resetBall();
            }
        }

        // Reset ball position
        function resetBall() {
            ballX = canvas.width / 2;
            ballY = canvas.height / 2;
            ballSpeedX = 5;
            ballSpeedY = 5;
        }

        // Draw function
        function draw() {
            // Clear canvas
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            // Draw paddles
            ctx.fillStyle = '#fff';
            ctx.fillRect(0, leftPaddleY, paddleWidth, paddleHeight);
            ctx.fillRect(canvas.width - paddleWidth, rightPaddleY, paddleWidth, paddleHeight);

            // Draw ball
            ctx.beginPath();
            ctx.arc(ballX, ballY, ballSize, 0, Math.PI * 2);
            ctx.fillStyle = '#fff';
            ctx.fill();
            ctx.closePath();
        }

        // Key down event listener
        document.addEventListener('keydown', (event) => {
            if (event.key === 'ArrowUp') {
                upPressed = true;
            } else if (event.key === 'ArrowDown') {
                downPressed = true;
            }
        });

        // Key up event listener
        document.addEventListener('keyup', (event) => {
            if (event.key === 'ArrowUp') {
                upPressed = false;
            } else if (event.key === 'ArrowDown') {
                downPressed = false;
            }
        });

        // Main game loop
        function gameLoop() {
            update();
            draw();
            requestAnimationFrame(gameLoop);
        }

        gameLoop(); // Start the game loop
    </script>
</body>
</html>